//
// Copyright (c) Vatsal Manot
//

import PathKit

extension XcodeProj {
    public func writePBXProj(path: String, override: Bool, outputSettings: PBXOutputSettings) throws {
        try self.writePBXProj(path: Path(path), override: override, outputSettings: outputSettings)
    }
  
    public var remotePackageURLs: Set<String> {
        var remotePackageURLs = Set<String>()
        if let root = pbxproj.rootObject {
            for package in root.remotePackages {
                if let repositoryURL = package.repositoryURL {
                    remotePackageURLs.append(repositoryURL)
                }
            }
        }
        return remotePackageURLs
    }
  
    public func allSchemes() -> [String] {
        var allSchemes: Set<String> = []
        if let schemes = self.sharedData?.schemes {
            for scheme in schemes {
                allSchemes.insert(scheme.name)
            }
        }
        for data in self.userData {
            for scheme in data.schemes {
                allSchemes.insert(scheme.name)
            }
        }
        /// Autogenerated scheme names from targets
        let allTargets = self.pbxproj.legacyTargets + self.pbxproj.nativeTargets + self.pbxproj.aggregateTargets
        for target in allTargets {
            allSchemes.insert(target.name)
        }
        return Array(allSchemes)
    }
}
